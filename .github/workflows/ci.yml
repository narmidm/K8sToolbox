name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Test Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t k8stoolbox:latest -f docker/Dockerfile .

      # Step 4: Run tests (basic example)
      - name: Run Scripts Tests
        run: |
          echo "Testing healthcheck script"
          ./scripts/healthcheck.sh default || exit 1
          echo "Testing connectivity test script"
          ./scripts/connectivity_test.sh default || exit 1

  lint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v2
        with:
          dockerfile: docker/Dockerfile

  go-lint:
    name: Lint Go Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.1
          args: --timeout=5m0s
